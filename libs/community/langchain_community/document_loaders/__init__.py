"""Document Loaders are classes to load Documents.

Document Loaders are usually used to load a lot of Documents in a single run.
"""

import importlib
from typing import List


def __getattr__(name: str) -> Any:
    """Dynamically import and return a loader module.

    Args:
        name (str): The name of the loader module to import.

    Raises:
        AttributeError: If the module does not exist.

    Returns:
        Any: The imported module.
    """
    modules = [
        "langchain_community.document_loaders.azlyrics",
        "langchain_community.document_loaders.acreom",
        "langchain_community.document_loaders.airbyte",
        "langchain_community.document_loaders.airbyte_json",
        "langchain_community.document_loaders.airtable",
        "langchain_community.document_loaders.apify_dataset",
        "langchain_community.document_loaders.arcgis_loader",
        "langchain_community.document_loaders.arxiv",
        "langchain_community.document_loaders.assemblyai",
        "langchain_community.document_loaders.astradb",
        "langchain_community.document_loaders.async_html",
        "langchain_community.document_loaders.athena",
        "langchain_community.document_loaders.azure_ai_data",
        "langchain_community.document_loaders.azure_blob_storage_container",
        "langchain_community.document_loaders.azure_blob_storage_file",
        "langchain_community.document_loaders.bibtex",
        "langchain_community.document_loaders.bigquery",
        "langchain_community.document_loaders.bilibili",
        "langchain_community.document_loaders.blackboard",
        "langchain_community.document_loaders.blob_loaders",
        "langchain_community.document_loaders.blockchain",
        "langchain_community.document_loaders.brave_search",
        "langchain_community.document_loaders.browserless",
        "langchain_community.document_loaders.cassandra",
        "langchain_community.document_loaders.chatgpt",
        "langchain_community.document_loaders.chm",
        "langchain_community.document_loaders.chromium",
        "langchain_community.document_loaders.college_confidential",
        "langchain_community.document_loaders.concurrent",
        "langchain_community.document_loaders.confluence",
        "langchain_community.document_loaders.conllu",
        "langchain_community.document_loaders.couchbase",
        "langchain_community.document_loaders.csv_loader",
        "langchain_community.document_loaders.cube_semantic",
        "langchain_community.document_loaders.datadog_logs",
        "langchain_community.document_loaders.dataframe",
        "langchain_community.document_loaders.diffbot",
        "langchain_community.document_loaders.directory",
        "langchain_community.document_loaders.discord",
        "langchain_community.document_loaders.doc_intelligence",
        "langchain_community.document_loaders.docugami",
        "langchain_community.document_loaders.docusaurus",
        "langchain_community.document_loaders.dropbox",
        "langchain_community.document_loaders.duckdb_loader",
        "langchain_community.document_loaders.etherscan",
        "langchain_community.document_loaders.evernote",
        "langchain_community.document_loaders.excel",
        "langchain_community.document_loaders.facebook_chat",
        "langchain_community.document_loaders.fauna",
        "langchain_community.document_loaders.figma",
        "langchain_community.document_loaders.firecrawl",
        "langchain_community.document_loaders.gcs_directory",
        "langchain_community.document_loaders.gcs_file",
        "langchain_community.document_loaders.geodataframe",
        "langchain_community.document_loaders.git",
        "langchain_community.document_loaders.gitbook",
        "langchain_community.document_loaders.github",
        "langchain_community.document_loaders.glue_catalog",
        "langchain_community.document_loaders.google_speech_to_text",
        "langchain_community.document_loaders.googledrive",
        "langchain_community.document_loaders.gutenberg",
        "langchain_community.document_loaders.hn",
        "langchain_community.document_loaders.html_bs",
        "langchain_community.document_loaders.hugging_face_dataset",
        "langchain_community.document_loaders.hugging_face_model",
        "langchain_community.document_loaders.ifixit",
        "langchain_community.document_loaders.imsdb",
        "langchain_community.document_loaders.image_captions",
        "langchain_community.document_loaders.iugu",
        "langchain_community.document_loaders.joplin",
        "langchain_community.document_loaders.json_loader",
        "langchain_community.document_loaders.lakefs",
        "langchain_community.document_loaders.larksuite",
        "langchain_community.document_loaders.llmsherpa",
        "langchain_community.document_loaders.markdown",
        "langchain_community.document_loaders.mastodon",
        "langchain_community.document_loaders.max_compute",
        "langchain_community.document_loaders.mediawikidump",
        "langchain_community.document_loaders.merge",
        "langchain_community.document_loaders.mhtml",
        "langchain_community.document_loaders.modern_treasury",
        "langchain_community.document_loaders.mongodb",
        "langchain_community.document_loaders.news",
        "langchain_community.document_loaders.notebook",
        "langchain_community.document_loaders.notiondb",
        "langchain_community.document_loaders.notion",
        "langchain_community.document_loaders.obs_directory",
        "langchain_community.document_loaders.obs_file",
        "langchain_community.document_loaders.obsidian",
        "langchain_community.document_loaders.onedrive_file",
        "langchain_community.document_loaders.onedrive",
        "langchain_community.document_loaders.open_city_data",
        "langchain_community.document_loaders.oracleadb_loader",
        "langchain_community.document_loaders.email",
        "langchain_community.document_loaders.pdf",
        "langchain_community.document_loaders.pebblo",
        "langchain_community.document_loaders.polars_dataframe",
        "langchain_community.document_loaders.powerpoint",
        "langchain_community.document_loaders.psychic",
        "langchain_community.document_loaders.pubmed",
        "langchain_community.document_loaders.pyspark_dataframe",
        "langchain_community.document_loaders.python",
        "langchain_community.document_loaders.readthedocs",
        "langchain_community.document_loaders.recursive_url_loader",
        "langchain_community.document_loaders.reddit",
        "langchain_community.document_loaders.roam",
        "langchain_community.document_loaders.rocksetdb",
        "langchain_community.document_loaders.s3_directory",
        "langchain_community.document_loaders.s3_file",
        "langchain_community.document_loaders.sql_database",
        "langchain_community.document_loaders.srt",
        "langchain_community.document_loaders.url_selenium",
        "langchain_community.document_loaders.sharepoint",
        "langchain_community.document_loaders.sitemap",
        "langchain_community.document_loaders.slack_directory",
        "langchain_community.document_loaders.snowflake_loader",
        "langchain_community.document_loaders.spreedly",
        "langchain_community.document_loaders.stripe",
        "langchain_community.document_loaders.surrealdb",
        "langchain_community.document_loaders.telegram",
        "langchain_community.document_loaders.tencent_cos_directory",
        "langchain_community.document_loaders.tencent_cos_file",
        "langchain_community.document_loaders.tensorflow_datasets",
        "langchain_community.document_loaders.text",
        "langchain_community.document_loaders.tidb",
        "langchain_community.document_loaders.tomarkdown",
        "langchain_community.document_loaders.toml",
        "langchain_community.document_loaders.trello",
        "langchain_community.document_loaders.twitter",
        "langchain_community.document_loaders.unstructured",
        "langchain_community.document_loaders.url",
        "langchain_community.document_loaders.url_playwright",
        "langchain_community.document_loaders.vsdx",
        "langchain_community.document_loaders.weather",
        "langchain_community.document_loaders.web_base",
        "langchain_community.document_loaders.whatsapp_chat",
        "langchain_community.document_loaders.wikipedia",
        "langchain_community.document_loaders.xorbits",
        "langchain_community.document_loaders.youtube",
        "langchain_community.document_loaders.yuque",
    ]
    modules = [m for m in modules if m.endswith(f".{name}")]
    if not modules:
        raise AttributeError(f"module {__name__} has no attribute {name}")
    module = importlib.import_module(modules[0])
    return getattr(module, name)


__all__: List[str] = [
    "AZLyricsLoader",
    "AcreomLoader",
    "AirbyteCDKLoader",
    "AirbyteGongLoader",
    "AirbyteHubspotLoader",
    "AirbyteJSONLoader",
    "AirbyteSalesforceLoader",
    "AirbyteShopifyLoader",
    "AirbyteStripeLoader",
    "AirbyteTypeformLoader",
    "AirbyteZendeskSupportLoader",
    "AirtableLoader",
    "AmazonTextractPDFLoader",
    "ApifyDatasetLoader",
    "ArcGISLoader",
    "ArxivLoader",
    "AssemblyAIAudioLoaderById",
    "AssemblyAIAudioTranscriptLoader",
    "AstraDBLoader",
    "AsyncChromiumLoader",
    "AsyncHtmlLoader",
    "AthenaLoader",
    "AzureAIDataLoader",
    "AzureAIDocumentIntelligenceLoader",
    "AzureBlobStorageContainerLoader",
    "AzureBlobStorageFileLoader",
    "BSHTMLLoader",
    "BibtexLoader",
    "BigQueryLoader",
    "BiliBiliLoader",
    "BlackboardLoader",
    "Blob",
    "BlobLoader",
    "BlockchainDocumentLoader",
    "BraveSearchLoader",
    "BrowserlessLoader",
    "CSVLoader",
    "CassandraLoader",
    "ChatGPTLoader",
    "CoNLLULoader",
    "CollegeConfidentialLoader",
    "ConcurrentLoader",
    "ConfluenceLoader",
    "CouchbaseLoader",
    "CubeSemanticLoader",
    "DataFrameLoader",
    "DatadogLogsLoader",
    "DiffbotLoader",
    "DirectoryLoader",
    "DiscordChatLoader",
    "DocugamiLoader",
    "DocusaurusLoader",
    "Docx2txtLoader",
    "DropboxLoader",
    "DuckDBLoader",
    "EtherscanLoader",
    "EverNoteLoader",
    "FacebookChatLoader",
    "FaunaLoader",
    "FigmaFileLoader",
    "FireCrawlLoader",
    "FileSystemBlobLoader",
    "GCSDirectoryLoader",
    "GCSFileLoader",
    "GeoDataFrameLoader",
    "GitHubIssuesLoader",
    "GitLoader",
    "GitbookLoader",
    "GithubFileLoader",
    "GlueCatalogLoader",
    "GoogleApiClient",
    "GoogleApiYoutubeLoader",
    "GoogleDriveLoader",
    "GoogleSpeechToTextLoader",
    "GutenbergLoader",
    "HNLoader",
    "HuggingFaceDatasetLoader",
    "HuggingFaceModelLoader",
    "IFixitLoader",
    "IMSDbLoader",
    "ImageCaptionLoader",
    "IuguLoader",
    "JSONLoader",
    "JoplinLoader",
    "LLMSherpaFileLoader",
    "LakeFSLoader",
    "LarkSuiteDocLoader",
    "MHTMLLoader",
    "MWDumpLoader",
    "MastodonTootsLoader",
    "MathpixPDFLoader",
    "MaxComputeLoader",
    "MergedDataLoader",
    "ModernTreasuryLoader",
    "MongodbLoader",
    "NewsURLLoader",
    "NotebookLoader",
    "NotionDBLoader",
    "NotionDirectoryLoader",
    "OBSDirectoryLoader",
    "OBSFileLoader",
    "ObsidianLoader",
    "OneDriveFileLoader",
    "OneDriveLoader",
    "OnlinePDFLoader",
    "OpenCityDataLoader",
    "OracleAutonomousDatabaseLoader",
    "OutlookMessageLoader",
    "PDFMinerLoader",
    "PDFMinerPDFasHTMLLoader",
    "PDFPlumberLoader",
    "PagedPDFSplitter",
    "PebbloSafeLoader",
    "PlaywrightURLLoader",
    "PolarsDataFrameLoader",
    "PsychicLoader",
    "PubMedLoader",
    "PyMuPDFLoader",
    "PyPDFDirectoryLoader",
    "PyPDFLoader",
    "PyPDFium2Loader",
    "PySparkDataFrameLoader",
    "PythonLoader",
    "RSSFeedLoader",
    "ReadTheDocsLoader",
    "RecursiveUrlLoader",
    "RedditPostsLoader",
    "RoamLoader",
    "RocksetLoader",
    "S3DirectoryLoader",
    "S3FileLoader",
    "SQLDatabaseLoader",
    "SRTLoader",
    "SeleniumURLLoader",
    "SharePointLoader",
    "SitemapLoader",
    "SlackDirectoryLoader",
    "SnowflakeLoader",
    "SpreedlyLoader",
    "StripeLoader",
    "SurrealDBLoader",
    "TelegramChatApiLoader",
    "TelegramChatFileLoader",
    "TelegramChatLoader",
    "TencentCOSDirectoryLoader",
    "TencentCOSFileLoader",
    "TensorflowDatasetLoader",
    "TextLoader",
    "TiDBLoader",
    "ToMarkdownLoader",
    "TomlLoader",
    "TrelloLoader",
    "TwitterTweetLoader",
    "UnstructuredAPIFileIOLoader",
    "UnstructuredAPIFileLoader",
    "UnstructuredCHMLoader",
    "UnstructuredCSVLoader",
    "UnstructuredEPubLoader",
    "UnstructuredEmailLoader",
    "UnstructuredExcelLoader",
    "UnstructuredFileIOLoader",
    "UnstructuredFileLoader",
    "UnstructuredHTMLLoader",
    "UnstructuredImageLoader",
    "UnstructuredMarkdownLoader",
    "UnstructuredODTLoader",
    "UnstructuredOrgModeLoader",
    "UnstructuredPDFLoader",
    "UnstructuredPowerPointLoader",
    "UnstructuredRSTLoader",
    "UnstructuredRTFLoader",
    "UnstructuredTSVLoader",
    "UnstructuredURLLoader",
    "UnstructuredWordDocumentLoader",
    "UnstructuredXMLLoader",
    "VsdxLoader",
    "WeatherDataLoader",
    "WebBaseLoader",
    "WhatsAppChatLoader",
    "WikipediaLoader",
    "XorbitsLoader",
    "YoutubeAudioLoader",
    "YoutubeLoader",
    "YuqueLoader",
]
